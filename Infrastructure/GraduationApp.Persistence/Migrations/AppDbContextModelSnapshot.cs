// <auto-generated />
using System;
using GraduationApp.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraduationApp.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraduationApp.Domain.Entities.Alumni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumniPrivacySettingId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlumniPrivacySettingId");

                    b.HasIndex("TermId")
                        .IsUnique()
                        .HasFilter("[TermId] IS NOT NULL");

                    b.ToTable("Alumnies");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.AlumniPrivacySetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumniPrivacySettingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SettingCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlumniPrivacySettings");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.AlumniRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlumniStudentNo")
                        .HasColumnType("int");

                    b.Property<int?>("AlumniStudentNoNavigationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniStudentNoNavigationId");

                    b.ToTable("AlumniRegistrations");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.AlumniRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlumniId")
                        .HasColumnType("int");

                    b.Property<int?>("AlumniRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("RoleId");

                    b.ToTable("AlumniRoles");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AnnouncementDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumniId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.JobPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("InformationDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("JobPosts");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumniId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TermYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntranceYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraduateYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserPrivacySettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserPrivacySettingId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.UserPrivacySetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserPrivacySettings");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.UserRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRegistrations");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSignedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Alumni", b =>
                {
                    b.HasOne("GraduationApp.Domain.Entities.AlumniPrivacySetting", "AlumniPrivacySetting")
                        .WithMany("Alumni")
                        .HasForeignKey("AlumniPrivacySettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationApp.Domain.Entities.Term", "Term")
                        .WithOne("Alumni")
                        .HasForeignKey("GraduationApp.Domain.Entities.Alumni", "TermId");

                    b.Navigation("AlumniPrivacySetting");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.AlumniRegistration", b =>
                {
                    b.HasOne("GraduationApp.Domain.Entities.Alumni", "AlumniStudentNoNavigation")
                        .WithMany("AlumniRegistrations")
                        .HasForeignKey("AlumniStudentNoNavigationId");

                    b.Navigation("AlumniStudentNoNavigation");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.AlumniRole", b =>
                {
                    b.HasOne("GraduationApp.Domain.Entities.Alumni", null)
                        .WithMany("Alumnies")
                        .HasForeignKey("AlumniId");

                    b.HasOne("GraduationApp.Domain.Entities.Role", null)
                        .WithMany("Roles")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Department", b =>
                {
                    b.HasOne("GraduationApp.Domain.Entities.Alumni", "Alumni")
                        .WithMany("Departments")
                        .HasForeignKey("AlumniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumni");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.JobPost", b =>
                {
                    b.HasOne("GraduationApp.Domain.Entities.User", "User")
                        .WithMany("JobPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.User", b =>
                {
                    b.HasOne("GraduationApp.Domain.Entities.UserPrivacySetting", "UserPrivacySetting")
                        .WithMany("Users")
                        .HasForeignKey("UserPrivacySettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserPrivacySetting");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.UserRegistration", b =>
                {
                    b.HasOne("GraduationApp.Domain.Entities.User", "User")
                        .WithMany("UserRegistrations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("GraduationApp.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationApp.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Alumni", b =>
                {
                    b.Navigation("AlumniRegistrations");

                    b.Navigation("Alumnies");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.AlumniPrivacySetting", b =>
                {
                    b.Navigation("Alumni");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Role", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.Term", b =>
                {
                    b.Navigation("Alumni")
                        .IsRequired();
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.User", b =>
                {
                    b.Navigation("JobPosts");

                    b.Navigation("UserRegistrations");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("GraduationApp.Domain.Entities.UserPrivacySetting", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
